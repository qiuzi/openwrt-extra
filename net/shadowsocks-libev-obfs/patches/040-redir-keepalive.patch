From 333c47a42a175f5ab4418c8aabfc9813c55ee886 Mon Sep 17 00:00:00 2001
From: Chion Tang <sdspeed@sina.com>
Date: Tue, 22 Dec 2015 14:07:04 +0800
Subject: [PATCH] Add keepalive feature for remote connections

---
 src/redir.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

--- a/src/redir.c
+++ b/src/redir.c
@@ -89,6 +89,7 @@ static int auth = 0;
 #ifdef HAVE_SETRLIMIT
 static int nofile = 0;
 #endif
+static int keepalive = 0;
 
 int getdestaddr(int fd, struct sockaddr_storage *destaddr)
 {
@@ -629,6 +630,7 @@ static void accept_cb(EV_P_ ev_io *w, in
     setsockopt(remotefd, SOL_SOCKET, SO_NOSIGPIPE, &opt, sizeof(opt));
 #endif
 
+    if (keepalive) {
     // Setup
     int keepAlive    = 1;
     int keepIdle     = 40;
@@ -638,6 +640,7 @@ static void accept_cb(EV_P_ ev_io *w, in
     setsockopt(remotefd, SOL_TCP, TCP_KEEPIDLE, (void *)&keepIdle, sizeof(keepIdle));
     setsockopt(remotefd, SOL_TCP, TCP_KEEPINTVL, (void *)&keepInterval, sizeof(keepInterval));
     setsockopt(remotefd, SOL_TCP, TCP_KEEPCNT, (void *)&keepCount, sizeof(keepCount));
+    }
 
     // Setup
     setnonblocking(remotefd);
@@ -680,7 +683,7 @@ int main(int argc, char **argv)
 
     opterr = 0;
 
-    while ((c = getopt_long(argc, argv, "f:s:p:l:k:t:m:c:b:a:n:O:o:G:g:huUvA", // SSR
+    while ((c = getopt_long(argc, argv, "f:s:p:l:k:t:m:c:b:a:n:O:o:G:g:huUvAK",
                             long_options, &option_index)) != -1) {
         switch (c) {
         case 0:
@@ -747,6 +750,9 @@ int main(int argc, char **argv)
             // The option character is not recognized.
             opterr = 1;
             break;
+        case 'K':
+            keepalive = 1;
+            break;
         }
     }
 
@@ -789,6 +795,9 @@ int main(int argc, char **argv)
         if (auth == 0) {
             auth = conf->auth;
         }
+        if (keepalive == 0) {
+            keepalive = conf->keepalive;
+        }
 #ifdef HAVE_SETRLIMIT
         if (nofile == 0) {
             nofile = conf->nofile;
@@ -829,6 +838,10 @@ int main(int argc, char **argv)
         LOGI("onetime authentication enabled");
     }
 
+    if (keepalive) {
+        LOGI("TCP keepalive enabled in redir mode");
+    }
+
     // ignore SIGPIPE
     signal(SIGPIPE, SIG_IGN);
     signal(SIGABRT, SIG_IGN);
--- a/src/jconf.h
+++ b/src/jconf.h
@@ -51,6 +51,7 @@ typedef struct {
     char *method;
     char *timeout;
     int auth;
+    int keepalive;
     int fast_open;
     int nofile;
     char *nameserver;
--- a/src/jconf.c
+++ b/src/jconf.c
@@ -187,6 +187,8 @@ jconf_t *read_jconf(const char *file)
                 conf.fast_open = value->u.boolean;
             } else if (strcmp(name, "auth") == 0) {
                 conf.auth = value->u.boolean;
+            } else if (strcmp(name, "keepalive") == 0) {
+                conf.keepalive = value->u.boolean;
             } else if (strcmp(name, "nofile") == 0) {
                 conf.nofile = value->u.integer;
             } else if (strcmp(name, "nameserver") == 0) {
